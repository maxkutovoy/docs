Добавьте защиту от ошибок в GET параметрах
Дайте токену специфичное название
Удалите временные файлы в случае ошибки
Используйте шаблоны вместо сложения строк
Почините извлечение filename из url
Используйте в названиях правильный регистр букв
Избавьтесь от сравнений с True/False
Вернитесь к исходным настройкам wttr.in
; Используем для
; def get_forecast_text(city, lang='en'):
;   url = f'http://wttr.in/{city}'
;   params = {'lang': lang}
;   response = requests.get(url, params=params)
;   response.raise_for_status()
;   return response.text
Сделайте скрипт совместимым с *nix и Windows
Проверьте HTTP статус ответа
Оптимизируйте декодирование JSON
Перенесите load_dotenv() внутрь ifmain / def main
Используйте contextlib.suppress
Вместо кодов статуса используйте response.ok
Уменьшите кол-во необходимых библиотек
Отложите перехват исключения
Не путайте JSON и полученные оттуда данные
Закрывайте файл как можно скорее
Разбейте функцию на части
Подберите точные названия
Не путайте файл и путь к нему
Сделайте except избирательным
Упростите создание словаря
Изолируйте функцию от внешнего окружения
Разрешите конфликт имен
Избавьтесь от сравнений с пустым списком/словарем
Повысьте надежность операций с файлами
Используйте общепринятые сокращения
Оберните код в ifmain
Перечислите сериализуемые поля
Удалите лишние all()
Не меняйте стандартные методы Model.save, delete, create
Подготовьте код Django к изменению URL схемы
Не путайте порядок слов в названиях
Избавьтесь от my_...
Используйте format_html для подстановки в HTML
Запретите отрицательные цены в БД
Отключите кэш в дата-миграции
Высушите super()
Почините настройку DEBUG
Разбейте профиль на отдельные настройки
Укажите русскоязычный verbose_name
Уберите дефолтное значение для SECRET_KEY
Расширьте лимит CharField
Используйте PhoneNumberField
Не доверяйте FloatField точные вычисления
Сделайте поле обязательным
Откажитесь от unicode-строк
Упорядочьте атрибуты модели данных
Укажите related_name во множественном числе
Возьмите настройки из django.conf.settings
Запретите отрицательное/нулевое количество товаров
Используйте безопасные дефолтные значения в полях моделей
Используйте декоратор @register
Добавьте в url pattern закрывающий слэш
Почините ALLOWED_HOSTS
Создайте поисковый индекс
Высушите названия
Вынесите настройку ALLOWED_HOSTS
Спрячьте пустой default в текстовых полях
Соберите переменные окружения в settings.py
Запретите null в строковых полях БД
Избавьтесь от дублирования данных в БД
Спрячьте SECRET_KEY
Используйте шорткат render
Оберните код в транзакцию
Проверьте адрес перед редиректом
Настройте метод *_or_create
Используйте related_name
Настройте enumerate
Разрешите полям оставаться пустыми
Воспользуйтесь методом QuerySet.get
Сократите количество запросов к БД
Вычислите булево значение без if
Поправьте множественное число в названиях
Обработайте DoesNotExist
Выделите содержимое блочных тегов
Избавьтесь от звёздочных импортов
Замените простые циклы на comprehensions
Оберните атрибут тега в кавычки
