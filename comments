Добавьте защиту от ошибок в GET параметрах
Дайте токену специфичное название
Удалите временные файлы в случае ошибки
Используйте шаблоны вместо сложения строк
Почините извлечение filename из url
Используйте в названиях правильный регистр букв
Избавьтесь от сравнений с True/False
Вернитесь к исходным настройкам wttr.in
; Используем для
; def get_forecast_text(city, lang='en'):
;   url = f'http://wttr.in/{city}'
;   params = {'lang': lang}
;   response = requests.get(url, params=params)
;   response.raise_for_status()
;   return response.text
Сделайте скрипт совместимым с *nix и Windows
Проверьте HTTP статус ответа
Оптимизируйте декодирование JSON
Перенесите load_dotenv() внутрь ifmain / def main
Используйте contextlib.suppress
Вместо кодов статуса используйте response.ok
Уменьшите кол-во необходимых библиотек
Отложите перехват исключения
Не путайте JSON и полученные оттуда данные
Закрывайте файл как можно скорее
Разбейте функцию на части
Подберите точные названия
Не путайте файл и путь к нему
Сделайте except избирательным
Упростите создание словаря
Изолируйте функцию от внешнего окружения
Разрешите конфликт имен
Избавьтесь от сравнений с пустым списком/словарем
